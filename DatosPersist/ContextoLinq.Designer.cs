//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 23/09/2017 8:36:29 a. m.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace Prueba12Context
{

    [DatabaseAttribute(Name = "Prueba")]
    [ProviderAttribute(typeof(Devart.Data.SqlServer.Linq.Provider.SqlDataProvider))]
    public partial class Prueba12DataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(Prueba12DataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertCliente(Cliente instance);
        partial void UpdateCliente(Cliente instance);
        partial void DeleteCliente(Cliente instance);
        partial void InsertFormulario(Formulario instance);
        partial void UpdateFormulario(Formulario instance);
        partial void DeleteFormulario(Formulario instance);
        partial void InsertOCompra(OCompra instance);
        partial void UpdateOCompra(OCompra instance);
        partial void DeleteOCompra(OCompra instance);
        partial void InsertPai(Pai instance);
        partial void UpdatePai(Pai instance);
        partial void DeletePai(Pai instance);
        partial void InsertProducto(Producto instance);
        partial void UpdateProducto(Producto instance);
        partial void DeleteProducto(Producto instance);
        partial void InsertRol(Rol instance);
        partial void UpdateRol(Rol instance);
        partial void DeleteRol(Rol instance);
        partial void InsertUsuario(Usuario instance);
        partial void UpdateUsuario(Usuario instance);
        partial void DeleteUsuario(Usuario instance);

        #endregion

        public Prueba12DataContext() :
        base(GetConnectionString("PruebaDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public Prueba12DataContext(MappingSource mappingSource) :
        base(GetConnectionString("PruebaDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName)
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public Prueba12DataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Prueba12DataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Prueba12DataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Prueba12DataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<Cliente> Clientes
        {
            get
            {
                return this.GetTable<Cliente>();
            }
        }

        public Devart.Data.Linq.Table<Formulario> Formularios
        {
            get
            {
                return this.GetTable<Formulario>();
            }
        }

        public Devart.Data.Linq.Table<OCompra> OCompras
        {
            get
            {
                return this.GetTable<OCompra>();
            }
        }

        public Devart.Data.Linq.Table<Pai> Pais
        {
            get
            {
                return this.GetTable<Pai>();
            }
        }

        public Devart.Data.Linq.Table<Producto> Productos
        {
            get
            {
                return this.GetTable<Producto>();
            }
        }

        public Devart.Data.Linq.Table<Rol> Rols
        {
            get
            {
                return this.GetTable<Rol>();
            }
        }

        public Devart.Data.Linq.Table<Usuario> Usuarios
        {
            get
            {
                return this.GetTable<Usuario>();
            }
        }

    
        /// <summary>
        /// There are no comments for ConsultarCliente in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarCliente")]
        public Devart.Data.Linq.ISingleResult<Cliente> ConsultarCliente([Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id)
        {
            IExecuteResult _ConsultarClienteResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id);
            return ((Devart.Data.Linq.ISingleResult<Cliente>)(_ConsultarClienteResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarCliente in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarClientes")]
        public Devart.Data.Linq.ISingleResult<Cliente> ConsultarCliente()
        {
            IExecuteResult _ConsultarClienteResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<Cliente>)(_ConsultarClienteResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarClientesActivo in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarClientesActivos")]
        public Devart.Data.Linq.ISingleResult<Cliente> ConsultarClientesActivo()
        {
            IExecuteResult _ConsultarClientesActivoResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<Cliente>)(_ConsultarClientesActivoResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarFormulariosXrol in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarFormulariosXrol")]
        public Devart.Data.Linq.ISingleResult<Formulario> ConsultarFormulariosXrol([Parameter(Name="idRol", DbType="SMALLINT")] System.Nullable<short> idRol)
        {
            IExecuteResult _ConsultarFormulariosXrolResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idRol);
            return ((Devart.Data.Linq.ISingleResult<Formulario>)(_ConsultarFormulariosXrolResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarOrdenCompra in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarOrdenCompra")]
        public Devart.Data.Linq.ISingleResult<OCompra> ConsultarOrdenCompra([Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id)
        {
            IExecuteResult _ConsultarOrdenCompraResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id);
            return ((Devart.Data.Linq.ISingleResult<OCompra>)(_ConsultarOrdenCompraResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarOrdenesCompra in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarOrdenesCompra")]
        public Devart.Data.Linq.ISingleResult<OCompra> ConsultarOrdenesCompra()
        {
            IExecuteResult _ConsultarOrdenesCompraResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<OCompra>)(_ConsultarOrdenesCompraResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarOrdenesCompraActiva in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarOrdenesCompraActivas")]
        public Devart.Data.Linq.ISingleResult<OCompra> ConsultarOrdenesCompraActiva()
        {
            IExecuteResult _ConsultarOrdenesCompraActivaResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<OCompra>)(_ConsultarOrdenesCompraActivaResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarOrdenesCompraXCliente in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarOrdenesCompraXCliente")]
        public Devart.Data.Linq.ISingleResult<OCompra> ConsultarOrdenesCompraXCliente([Parameter(Name="IdCliente", DbType="INT")] System.Nullable<int> IdCliente)
        {
            IExecuteResult _ConsultarOrdenesCompraXClienteResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IdCliente);
            return ((Devart.Data.Linq.ISingleResult<OCompra>)(_ConsultarOrdenesCompraXClienteResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarProducto in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarProducto")]
        public Devart.Data.Linq.ISingleResult<Producto> ConsultarProducto([Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id)
        {
            IExecuteResult _ConsultarProductoResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id);
            return ((Devart.Data.Linq.ISingleResult<Producto>)(_ConsultarProductoResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarProducto in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarProductos")]
        public Devart.Data.Linq.ISingleResult<Producto> ConsultarProducto()
        {
            IExecuteResult _ConsultarProductoResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<Producto>)(_ConsultarProductoResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarProductosActivo in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarProductosActivos")]
        public Devart.Data.Linq.ISingleResult<Producto> ConsultarProductosActivo()
        {
            IExecuteResult _ConsultarProductosActivoResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<Producto>)(_ConsultarProductosActivoResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarRole in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarRoles")]
        public Devart.Data.Linq.ISingleResult<Rol> ConsultarRole()
        {
            IExecuteResult _ConsultarRoleResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<Rol>)(_ConsultarRoleResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarRolXID in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarRolXID")]
        public Devart.Data.Linq.ISingleResult<Rol> ConsultarRolXID([Parameter(Name="Id", DbType="SMALLINT")] System.Nullable<short> Id)
        {
            IExecuteResult _ConsultarRolXIDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id);
            return ((Devart.Data.Linq.ISingleResult<Rol>)(_ConsultarRolXIDResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarUsuario in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarUsuario")]
        public Devart.Data.Linq.ISingleResult<Usuario> ConsultarUsuario([Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id)
        {
            IExecuteResult _ConsultarUsuarioResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id);
            return ((Devart.Data.Linq.ISingleResult<Usuario>)(_ConsultarUsuarioResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarUsuario in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarUsuarios")]
        public Devart.Data.Linq.ISingleResult<ConsultarUsuarioResult> ConsultarUsuario()
        {
            IExecuteResult _ConsultarUsuarioResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<ConsultarUsuarioResult>)(_ConsultarUsuarioResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ConsultarUsuariosActivo in the schema.
        /// </summary>
        [Function(Name=@"dbo.ConsultarUsuariosActivos")]
        public Devart.Data.Linq.ISingleResult<ConsultarUsuarioResult> ConsultarUsuariosActivo()
        {
            IExecuteResult _ConsultarUsuariosActivoResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<ConsultarUsuarioResult>)(_ConsultarUsuariosActivoResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for CrearCliente in the schema.
        /// </summary>
        [Function(Name=@"dbo.CrearCliente")]
        public Devart.Data.Linq.ISingleResult<CrearClienteResult> CrearCliente([Parameter(Name="Nombre", DbType="VARCHAR(50)")] string Nombre, [Parameter(Name="Nit", DbType="INT")] System.Nullable<int> Nit, [Parameter(Name="Direccion", DbType="VARCHAR(50)")] string Direccion, [Parameter(Name="Telefono", DbType="INT")] System.Nullable<int> Telefono, [Parameter(Name="eliminado", DbType="BIT")] System.Nullable<bool> eliminado)
        {
            IExecuteResult _CrearClienteResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Nombre, Nit, Direccion, Telefono, eliminado);
            return ((Devart.Data.Linq.ISingleResult<CrearClienteResult>)(_CrearClienteResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for CrearOrdenCompra in the schema.
        /// </summary>
        [Function(Name=@"dbo.CrearOrdenCompra")]
        public Devart.Data.Linq.ISingleResult<CrearClienteResult> CrearOrdenCompra([Parameter(Name="IdCliente", DbType="INT")] System.Nullable<int> IdCliente, [Parameter(Name="NoOrden", DbType="INT")] System.Nullable<int> NoOrden, [Parameter(Name="Eliminado", DbType="BIT")] System.Nullable<bool> Eliminado)
        {
            IExecuteResult _CrearOrdenCompraResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IdCliente, NoOrden, Eliminado);
            return ((Devart.Data.Linq.ISingleResult<CrearClienteResult>)(_CrearOrdenCompraResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for CrearOrdenProducto in the schema.
        /// </summary>
        [Function(Name=@"dbo.CrearOrdenProducto")]
        public void CrearOrdenProducto([Parameter(Name="IdOrden", DbType="INT")] System.Nullable<int> IdOrden, [Parameter(Name="IdProducto", DbType="INT")] System.Nullable<int> IdProducto)
        {
            IExecuteResult _CrearOrdenProductoResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IdOrden, IdProducto);
        }

    
        /// <summary>
        /// There are no comments for CrearPai in the schema.
        /// </summary>
        [Function(Name=@"dbo.CrearPais")]
        public Devart.Data.Linq.ISingleResult<CrearClienteResult> CrearPai([Parameter(Name="NombrePais", DbType="VARCHAR(50)")] string NombrePais, [Parameter(Name="Poblacion", DbType="INT")] System.Nullable<int> Poblacion, [Parameter(Name="Gentilicio", DbType="VARCHAR(50)")] string Gentilicio)
        {
            IExecuteResult _CrearPaiResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), NombrePais, Poblacion, Gentilicio);
            return ((Devart.Data.Linq.ISingleResult<CrearClienteResult>)(_CrearPaiResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for CrearProducto in the schema.
        /// </summary>
        [Function(Name=@"dbo.CrearProducto")]
        public Devart.Data.Linq.ISingleResult<CrearClienteResult> CrearProducto([Parameter(Name="Producto", DbType="VARCHAR(50)")] string Producto, [Parameter(Name="Cliente", DbType="VARCHAR(50)")] string Cliente, [Parameter(Name="Eliminado", DbType="BIT")] System.Nullable<bool> Eliminado)
        {
            IExecuteResult _CrearProductoResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Producto, Cliente, Eliminado);
            return ((Devart.Data.Linq.ISingleResult<CrearClienteResult>)(_CrearProductoResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for CrearUsuario in the schema.
        /// </summary>
        [Function(Name=@"dbo.CrearUsuario")]
        public Devart.Data.Linq.ISingleResult<CrearClienteResult> CrearUsuario([Parameter(Name="Nombre", DbType="VARCHAR(50)")] string Nombre, [Parameter(Name="Identificacion", DbType="INT")] System.Nullable<int> Identificacion, [Parameter(Name="Direccion", DbType="VARCHAR(50)")] string Direccion, [Parameter(Name="Telefono", DbType="INT")] System.Nullable<int> Telefono, [Parameter(Name="eliminado", DbType="BIT")] System.Nullable<bool> eliminado, [Parameter(Name="userName", DbType="NVARCHAR(100)")] string userName, [Parameter(Name="pass", DbType="NVARCHAR(50)")] string pass, [Parameter(Name="idRol", DbType="SMALLINT")] System.Nullable<short> idRol)
        {
            IExecuteResult _CrearUsuarioResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Nombre, Identificacion, Direccion, Telefono, eliminado, userName, pass, idRol);
            return ((Devart.Data.Linq.ISingleResult<CrearClienteResult>)(_CrearUsuarioResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for DesasociarProducto in the schema.
        /// </summary>
        [Function(Name=@"dbo.DesasociarProductos")]
        public void DesasociarProducto([Parameter(Name="IdOrden", DbType="INT")] System.Nullable<int> IdOrden)
        {
            IExecuteResult _DesasociarProductoResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IdOrden);
        }

    
        /// <summary>
        /// There are no comments for EliminarCliente in the schema.
        /// </summary>
        [Function(Name=@"dbo.EliminarCliente")]
        public void EliminarCliente([Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id, [Parameter(Name="eliminado", DbType="BIT")] System.Nullable<bool> eliminado)
        {
            IExecuteResult _EliminarClienteResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id, eliminado);
        }

    
        /// <summary>
        /// There are no comments for EliminarOrdenCompra in the schema.
        /// </summary>
        [Function(Name=@"dbo.EliminarOrdenCompra")]
        public void EliminarOrdenCompra([Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id, [Parameter(Name="IdEliminado", DbType="INT")] System.Nullable<int> IdEliminado)
        {
            IExecuteResult _EliminarOrdenCompraResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id, IdEliminado);
        }

    
        /// <summary>
        /// There are no comments for EliminarProducto in the schema.
        /// </summary>
        [Function(Name=@"dbo.EliminarProducto")]
        public void EliminarProducto([Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id, [Parameter(Name="Eliminado", DbType="BIT")] System.Nullable<bool> Eliminado)
        {
            IExecuteResult _EliminarProductoResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id, Eliminado);
        }

    
        /// <summary>
        /// There are no comments for EliminarUsuario in the schema.
        /// </summary>
        [Function(Name=@"dbo.EliminarUsuario")]
        public void EliminarUsuario([Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id, [Parameter(Name="eliminado", DbType="BIT")] System.Nullable<bool> eliminado)
        {
            IExecuteResult _EliminarUsuarioResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id, eliminado);
        }

    
        /// <summary>
        /// There are no comments for InsertarRol in the schema.
        /// </summary>
        [Function(Name=@"dbo.InsertarRol")]
        public void InsertarRol([Parameter(Name="nombre", DbType="VARCHAR(50)")] string nombre, [Parameter(Name="urlInicio", DbType="VARCHAR(50)")] string urlInicio, [Parameter(Name="mensajeInicio", DbType="VARCHAR(50)")] string mensajeInicio)
        {
            IExecuteResult _InsertarRolResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre, urlInicio, mensajeInicio);
        }

    
        /// <summary>
        /// There are no comments for ModificarCliente in the schema.
        /// </summary>
        [Function(Name=@"dbo.ModificarCliente")]
        public void ModificarCliente([Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id, [Parameter(Name="Nombre", DbType="VARCHAR(50)")] string Nombre, [Parameter(Name="Nit", DbType="INT")] System.Nullable<int> Nit, [Parameter(Name="Direccion", DbType="VARCHAR(50)")] string Direccion, [Parameter(Name="Telefono", DbType="INT")] System.Nullable<int> Telefono, [Parameter(Name="eliminado", DbType="BIT")] System.Nullable<bool> eliminado)
        {
            IExecuteResult _ModificarClienteResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id, Nombre, Nit, Direccion, Telefono, eliminado);
        }

    
        /// <summary>
        /// There are no comments for ModificarOrdenCompra in the schema.
        /// </summary>
        [Function(Name=@"dbo.ModificarOrdenCompra")]
        public void ModificarOrdenCompra([Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id, [Parameter(Name="IdCliente", DbType="INT")] System.Nullable<int> IdCliente, [Parameter(Name="Eliminado", DbType="INT")] System.Nullable<int> Eliminado)
        {
            IExecuteResult _ModificarOrdenCompraResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id, IdCliente, Eliminado);
        }

    
        /// <summary>
        /// There are no comments for ModificarProducto in the schema.
        /// </summary>
        [Function(Name=@"dbo.ModificarProducto")]
        public void ModificarProducto([Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id, [Parameter(Name="Producto", DbType="VARCHAR(1)")] string Producto, [Parameter(Name="Cliente", DbType="VARCHAR(1)")] string Cliente, [Parameter(Name="Eliminado", DbType="BIT")] System.Nullable<bool> Eliminado)
        {
            IExecuteResult _ModificarProductoResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id, Producto, Cliente, Eliminado);
        }

    
        /// <summary>
        /// There are no comments for ModificarRol in the schema.
        /// </summary>
        [Function(Name=@"dbo.ModificarRol")]
        public void ModificarRol([Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id, [Parameter(Name="nombre", DbType="VARCHAR(50)")] string nombre, [Parameter(Name="urlInicio", DbType="VARCHAR(50)")] string urlInicio, [Parameter(Name="mensajeInicio", DbType="VARCHAR(50)")] string mensajeInicio)
        {
            IExecuteResult _ModificarRolResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Id, nombre, urlInicio, mensajeInicio);
        }

    
        /// <summary>
        /// There are no comments for ModificarUsuario in the schema.
        /// </summary>
        [Function(Name=@"dbo.ModificarUsuario")]
        public void ModificarUsuario([Parameter(Name="Nombre", DbType="VARCHAR(50)")] string Nombre, [Parameter(Name="Id", DbType="INT")] System.Nullable<int> Id, [Parameter(Name="Identificacion", DbType="INT")] System.Nullable<int> Identificacion, [Parameter(Name="Direccion", DbType="VARCHAR(50)")] string Direccion, [Parameter(Name="Telefono", DbType="INT")] System.Nullable<int> Telefono, [Parameter(Name="Eliminado", DbType="BIT")] System.Nullable<bool> Eliminado, [Parameter(Name="userName", DbType="NVARCHAR(100)")] string userName, [Parameter(Name="pass", DbType="NVARCHAR(50)")] string pass, [Parameter(Name="idRol", DbType="SMALLINT")] System.Nullable<short> idRol)
        {
            IExecuteResult _ModificarUsuarioResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Nombre, Id, Identificacion, Direccion, Telefono, Eliminado, userName, pass, idRol);
        }

    
        /// <summary>
        /// There are no comments for ObtenerOrdenCompraXId in the schema.
        /// </summary>
        [Function(Name=@"dbo.ObtenerOrdenCompraXId")]
        public void ObtenerOrdenCompraXId([Parameter(Name="IdOrden", DbType="INT")] System.Nullable<int> IdOrden)
        {
            IExecuteResult _ObtenerOrdenCompraXIdResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IdOrden);
        }

    
        /// <summary>
        /// There are no comments for ValidarLogin in the schema.
        /// </summary>
        [Function(Name=@"dbo.ValidarLogin")]
        public Devart.Data.Linq.ISingleResult<Usuario> ValidarLogin([Parameter(Name="userName", DbType="NVARCHAR(100)")] string userName, [Parameter(Name="passWord", DbType="NVARCHAR(100)")] string passWord)
        {
            IExecuteResult _ValidarLoginResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, passWord);
            return ((Devart.Data.Linq.ISingleResult<Usuario>)(_ValidarLoginResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for ValidarUsername in the schema.
        /// </summary>
        [Function(Name=@"dbo.ValidarUsername")]
        public Devart.Data.Linq.ISingleResult<ValidarUsernameResult> ValidarUsername([Parameter(Name="userName", DbType="NVARCHAR(100)")] string userName)
        {
            IExecuteResult _ValidarUsernameResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName);
            return ((Devart.Data.Linq.ISingleResult<ValidarUsernameResult>)(_ValidarUsernameResult.ReturnValue));
        }
    }
}

namespace Prueba12Context
{

    /// <summary>
    /// There are no comments for Prueba12Context.Cliente in the schema.
    /// </summary>
    [Table(Name = @"dbo.Cliente")]
    public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id;

        private System.Nullable<int> _Nit;

        private string _Nombre;

        private string _Direccion;

        private System.Nullable<int> _Telefono;

        private System.Nullable<bool> _Eliminado;
        #pragma warning restore 0649

        private EntitySet<OCompra> _OCompras;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNitChanging(System.Nullable<int> value);
        partial void OnNitChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnDireccionChanging(string value);
        partial void OnDireccionChanged();
        partial void OnTelefonoChanging(System.Nullable<int> value);
        partial void OnTelefonoChanged();
        partial void OnEliminadoChanging(System.Nullable<bool> value);
        partial void OnEliminadoChanged();
        #endregion

        public Cliente()
        {
            this._OCompras = new EntitySet<OCompra>(new Action<OCompra>(this.attach_OCompras), new Action<OCompra>(this.detach_OCompras));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL IDENTITY", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nit in the schema.
        /// </summary>
        [Column(Storage = "_Nit", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Nit
        {
            get
            {
                return this._Nit;
            }
            set
            {
                if (this._Nit != value)
                {
                    this.OnNitChanging(value);
                    this.SendPropertyChanging("Nit");
                    this._Nit = value;
                    this.SendPropertyChanged("Nit");
                    this.OnNitChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Storage = "_Nombre", DbType = "VARCHAR(50)", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Direccion in the schema.
        /// </summary>
        [Column(Storage = "_Direccion", DbType = "VARCHAR(50)", UpdateCheck = UpdateCheck.Never)]
        public string Direccion
        {
            get
            {
                return this._Direccion;
            }
            set
            {
                if (this._Direccion != value)
                {
                    this.OnDireccionChanging(value);
                    this.SendPropertyChanging("Direccion");
                    this._Direccion = value;
                    this.SendPropertyChanged("Direccion");
                    this.OnDireccionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Telefono in the schema.
        /// </summary>
        [Column(Name = @"telefono", Storage = "_Telefono", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Telefono
        {
            get
            {
                return this._Telefono;
            }
            set
            {
                if (this._Telefono != value)
                {
                    this.OnTelefonoChanging(value);
                    this.SendPropertyChanging("Telefono");
                    this._Telefono = value;
                    this.SendPropertyChanged("Telefono");
                    this.OnTelefonoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Eliminado in the schema.
        /// </summary>
        [Column(Storage = "_Eliminado", DbType = "BIT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<bool> Eliminado
        {
            get
            {
                return this._Eliminado;
            }
            set
            {
                if (this._Eliminado != value)
                {
                    this.OnEliminadoChanging(value);
                    this.SendPropertyChanging("Eliminado");
                    this._Eliminado = value;
                    this.SendPropertyChanged("Eliminado");
                    this.OnEliminadoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OCompras in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Cliente_OCompra", Storage="_OCompras", ThisKey="Id", OtherKey="IdCliente", DeleteRule="NO ACTION")]
        public EntitySet<OCompra> OCompras
        {
            get
            {
                return this._OCompras;
            }
            set
            {
                this._OCompras.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_OCompras(OCompra entity)
        {
            this.SendPropertyChanging("OCompras");
            entity.Cliente = this;
        }
    
        private void detach_OCompras(OCompra entity)
        {
            this.SendPropertyChanging("OCompras");
            entity.Cliente = null;
        }
    }

    /// <summary>
    /// There are no comments for Prueba12Context.Formulario in the schema.
    /// </summary>
    [Table(Name = @"dbo.Formulario")]
    public partial class Formulario : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private short _Id;

        private string _Nombre;

        private string _Url;

        private bool _IsInicio;
        #pragma warning restore 0649

        private EntitySet<Rol> _Rols;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(short value);
        partial void OnIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnUrlChanging(string value);
        partial void OnUrlChanged();
        partial void OnIsInicioChanging(bool value);
        partial void OnIsInicioChanged();
        #endregion

        public Formulario()
        {
            this._Rols = new EntitySet<Rol>(new Action<Rol>(this.attach_Rols), new Action<Rol>(this.detach_Rols));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SMALLINT NOT NULL IDENTITY", IsDbGenerated = true, IsPrimaryKey = true)]
        public short Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Url in the schema.
        /// </summary>
        [Column(Name = @"url", Storage = "_Url", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Url
        {
            get
            {
                return this._Url;
            }
            set
            {
                if (this._Url != value)
                {
                    this.OnUrlChanging(value);
                    this.SendPropertyChanging("Url");
                    this._Url = value;
                    this.SendPropertyChanged("Url");
                    this.OnUrlChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IsInicio in the schema.
        /// </summary>
        [Column(Name = @"isInicio", Storage = "_IsInicio", CanBeNull = false, DbType = "BIT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public bool IsInicio
        {
            get
            {
                return this._IsInicio;
            }
            set
            {
                if (this._IsInicio != value)
                {
                    this.OnIsInicioChanging(value);
                    this.SendPropertyChanging("IsInicio");
                    this._IsInicio = value;
                    this.SendPropertyChanged("IsInicio");
                    this.OnIsInicioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Rols in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Rol_Formulario", Storage="_Rols", ThisKey="Id", OtherKey="Id", LinkTableName=@"dbo.FormulariosXRol", LinkThisKey=@"IdFormulario", LinkOtherKey=@"IdRol")]
        public EntitySet<Rol> Rols
        {
            get
            {
                return this._Rols;
            }
            set
            {
                this._Rols.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Rols(Rol entity)
        {
            this.SendPropertyChanging("Rols");
            entity.Formularios.Add(this);
        }
    
        private void detach_Rols(Rol entity)
        {
            this.SendPropertyChanging("Rols");
            entity.Formularios.Remove(this);
        }
    }

    /// <summary>
    /// There are no comments for Prueba12Context.OCompra in the schema.
    /// </summary>
    [Table(Name = @"dbo.OCompra")]
    public partial class OCompra : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id;

        private System.Nullable<int> _IdCliente;

        private int _NoOrden;

        private System.Nullable<bool> _Eliminado;
        #pragma warning restore 0649

        private EntityRef<Cliente> _Cliente;

        private EntitySet<Producto> _Productos;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnIdClienteChanging(System.Nullable<int> value);
        partial void OnIdClienteChanged();
        partial void OnNoOrdenChanging(int value);
        partial void OnNoOrdenChanged();
        partial void OnEliminadoChanging(System.Nullable<bool> value);
        partial void OnEliminadoChanged();
        #endregion

        public OCompra()
        {
            this._Cliente  = default(EntityRef<Cliente>);
            this._Productos = new EntitySet<Producto>(new Action<Producto>(this.attach_Productos), new Action<Producto>(this.detach_Productos));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL IDENTITY", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdCliente in the schema.
        /// </summary>
        [Column(Storage = "_IdCliente", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IdCliente
        {
            get
            {
                return this._IdCliente;
            }
            set
            {
                if (this._IdCliente != value)
                {
                    if (this._Cliente.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnIdClienteChanging(value);
                    this.SendPropertyChanging("IdCliente");
                    this._IdCliente = value;
                    this.SendPropertyChanged("IdCliente");
                    this.OnIdClienteChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NoOrden in the schema.
        /// </summary>
        [Column(Storage = "_NoOrden", CanBeNull = false, DbType = "INT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int NoOrden
        {
            get
            {
                return this._NoOrden;
            }
            set
            {
                if (this._NoOrden != value)
                {
                    this.OnNoOrdenChanging(value);
                    this.SendPropertyChanging("NoOrden");
                    this._NoOrden = value;
                    this.SendPropertyChanged("NoOrden");
                    this.OnNoOrdenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Eliminado in the schema.
        /// </summary>
        [Column(Storage = "_Eliminado", DbType = "BIT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<bool> Eliminado
        {
            get
            {
                return this._Eliminado;
            }
            set
            {
                if (this._Eliminado != value)
                {
                    this.OnEliminadoChanging(value);
                    this.SendPropertyChanging("Eliminado");
                    this._Eliminado = value;
                    this.SendPropertyChanged("Eliminado");
                    this.OnEliminadoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cliente in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Cliente_OCompra", Storage="_Cliente", ThisKey="IdCliente", OtherKey="Id", IsForeignKey=true)]
        public Cliente Cliente
        {
            get
            {
                return this._Cliente.Entity;
            }
            set
            {
                Cliente previousValue = this._Cliente.Entity;
                if ((previousValue != value) || (this._Cliente.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Cliente");
                    if (previousValue != null)
                    {
                        this._Cliente.Entity = null;
                        previousValue.OCompras.Remove(this);
                    }
                    this._Cliente.Entity = value;
                    if (value != null)
                    {
                        this._IdCliente = value.Id;
                        value.OCompras.Add(this);
                    }
                    else
                    {
                        this._IdCliente = default(System.Nullable<int>);
                    }
                    this.SendPropertyChanged("Cliente");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Productos in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="OCompra_Producto", Storage="_Productos", ThisKey="Id", OtherKey="Id", LinkTableName=@"dbo.Orden_Producto", LinkThisKey=@"IdOrden", LinkOtherKey=@"IdProducto")]
        public EntitySet<Producto> Productos
        {
            get
            {
                return this._Productos;
            }
            set
            {
                this._Productos.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Productos(Producto entity)
        {
            this.SendPropertyChanging("Productos");
            entity.OCompras.Add(this);
        }
    
        private void detach_Productos(Producto entity)
        {
            this.SendPropertyChanging("Productos");
            entity.OCompras.Remove(this);
        }
    }

    /// <summary>
    /// There are no comments for Prueba12Context.Pai in the schema.
    /// </summary>
    [Table(Name = @"dbo.Pais")]
    public partial class Pai : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id;

        private string _NombrePais;

        private System.Nullable<int> _Poblacion;

        private string _Gentilicio;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNombrePaisChanging(string value);
        partial void OnNombrePaisChanged();
        partial void OnPoblacionChanging(System.Nullable<int> value);
        partial void OnPoblacionChanged();
        partial void OnGentilicioChanging(string value);
        partial void OnGentilicioChanged();
        #endregion

        public Pai()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL IDENTITY", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombrePais in the schema.
        /// </summary>
        [Column(Storage = "_NombrePais", DbType = "VARCHAR(50)", UpdateCheck = UpdateCheck.Never)]
        public string NombrePais
        {
            get
            {
                return this._NombrePais;
            }
            set
            {
                if (this._NombrePais != value)
                {
                    this.OnNombrePaisChanging(value);
                    this.SendPropertyChanging("NombrePais");
                    this._NombrePais = value;
                    this.SendPropertyChanged("NombrePais");
                    this.OnNombrePaisChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Poblacion in the schema.
        /// </summary>
        [Column(Storage = "_Poblacion", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Poblacion
        {
            get
            {
                return this._Poblacion;
            }
            set
            {
                if (this._Poblacion != value)
                {
                    this.OnPoblacionChanging(value);
                    this.SendPropertyChanging("Poblacion");
                    this._Poblacion = value;
                    this.SendPropertyChanged("Poblacion");
                    this.OnPoblacionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Gentilicio in the schema.
        /// </summary>
        [Column(Storage = "_Gentilicio", DbType = "VARCHAR(50)", UpdateCheck = UpdateCheck.Never)]
        public string Gentilicio
        {
            get
            {
                return this._Gentilicio;
            }
            set
            {
                if (this._Gentilicio != value)
                {
                    this.OnGentilicioChanging(value);
                    this.SendPropertyChanging("Gentilicio");
                    this._Gentilicio = value;
                    this.SendPropertyChanged("Gentilicio");
                    this.OnGentilicioChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for Prueba12Context.Producto in the schema.
    /// </summary>
    [Table(Name = @"dbo.Producto")]
    public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _Id;

        private string _Producto1;

        private string _Cliente;

        private System.Nullable<bool> _Eliminado;
        #pragma warning restore 0649

        private EntitySet<OCompra> _OCompras;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnProducto1Changing(string value);
        partial void OnProducto1Changed();
        partial void OnClienteChanging(string value);
        partial void OnClienteChanged();
        partial void OnEliminadoChanging(System.Nullable<bool> value);
        partial void OnEliminadoChanged();
        #endregion

        public Producto()
        {
            this._OCompras = new EntitySet<OCompra>(new Action<OCompra>(this.attach_OCompras), new Action<OCompra>(this.detach_OCompras));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT NOT NULL IDENTITY", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Producto1 in the schema.
        /// </summary>
        [Column(Name = @"Producto", Storage = "_Producto1", DbType = "VARCHAR(50)", UpdateCheck = UpdateCheck.Never)]
        public string Producto1
        {
            get
            {
                return this._Producto1;
            }
            set
            {
                if (this._Producto1 != value)
                {
                    this.OnProducto1Changing(value);
                    this.SendPropertyChanging("Producto1");
                    this._Producto1 = value;
                    this.SendPropertyChanged("Producto1");
                    this.OnProducto1Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cliente in the schema.
        /// </summary>
        [Column(Storage = "_Cliente", DbType = "VARCHAR(50)", UpdateCheck = UpdateCheck.Never)]
        public string Cliente
        {
            get
            {
                return this._Cliente;
            }
            set
            {
                if (this._Cliente != value)
                {
                    this.OnClienteChanging(value);
                    this.SendPropertyChanging("Cliente");
                    this._Cliente = value;
                    this.SendPropertyChanged("Cliente");
                    this.OnClienteChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Eliminado in the schema.
        /// </summary>
        [Column(Storage = "_Eliminado", DbType = "BIT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<bool> Eliminado
        {
            get
            {
                return this._Eliminado;
            }
            set
            {
                if (this._Eliminado != value)
                {
                    this.OnEliminadoChanging(value);
                    this.SendPropertyChanging("Eliminado");
                    this._Eliminado = value;
                    this.SendPropertyChanged("Eliminado");
                    this.OnEliminadoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OCompras in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="OCompra_Producto", Storage="_OCompras", ThisKey="Id", OtherKey="Id", LinkTableName=@"dbo.Orden_Producto", LinkThisKey=@"IdProducto", LinkOtherKey=@"IdOrden")]
        public EntitySet<OCompra> OCompras
        {
            get
            {
                return this._OCompras;
            }
            set
            {
                this._OCompras.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_OCompras(OCompra entity)
        {
            this.SendPropertyChanging("OCompras");
            entity.Productos.Add(this);
        }
    
        private void detach_OCompras(OCompra entity)
        {
            this.SendPropertyChanging("OCompras");
            entity.Productos.Remove(this);
        }
    }

    /// <summary>
    /// There are no comments for Prueba12Context.Rol in the schema.
    /// </summary>
    [Table(Name = @"dbo.Rol")]
    public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private short _Id;

        private string _Nombre;

        private string _UrlInicio;

        private string _MensajeInicio;
        #pragma warning restore 0649

        private EntitySet<Usuario> _Usuarios;

        private EntitySet<Formulario> _Formularios;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(short value);
        partial void OnIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnUrlInicioChanging(string value);
        partial void OnUrlInicioChanged();
        partial void OnMensajeInicioChanging(string value);
        partial void OnMensajeInicioChanged();
        #endregion

        public Rol()
        {
            this._Usuarios = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuarios), new Action<Usuario>(this.detach_Usuarios));
            this._Formularios = new EntitySet<Formulario>(new Action<Formulario>(this.attach_Formularios), new Action<Formulario>(this.detach_Formularios));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "SMALLINT NOT NULL IDENTITY", IsDbGenerated = true, IsPrimaryKey = true)]
        public short Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UrlInicio in the schema.
        /// </summary>
        [Column(Name = @"urlInicio", Storage = "_UrlInicio", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string UrlInicio
        {
            get
            {
                return this._UrlInicio;
            }
            set
            {
                if (this._UrlInicio != value)
                {
                    this.OnUrlInicioChanging(value);
                    this.SendPropertyChanging("UrlInicio");
                    this._UrlInicio = value;
                    this.SendPropertyChanged("UrlInicio");
                    this.OnUrlInicioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MensajeInicio in the schema.
        /// </summary>
        [Column(Name = @"mensajeInicio", Storage = "_MensajeInicio", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string MensajeInicio
        {
            get
            {
                return this._MensajeInicio;
            }
            set
            {
                if (this._MensajeInicio != value)
                {
                    this.OnMensajeInicioChanging(value);
                    this.SendPropertyChanging("MensajeInicio");
                    this._MensajeInicio = value;
                    this.SendPropertyChanged("MensajeInicio");
                    this.OnMensajeInicioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Usuarios in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Rol_Usuario", Storage="_Usuarios", ThisKey="Id", OtherKey="IdRol", DeleteRule="NO ACTION")]
        public EntitySet<Usuario> Usuarios
        {
            get
            {
                return this._Usuarios;
            }
            set
            {
                this._Usuarios.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Formularios in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Rol_Formulario", Storage="_Formularios", ThisKey="Id", OtherKey="Id", LinkTableName=@"dbo.FormulariosXRol", LinkThisKey=@"IdRol", LinkOtherKey=@"IdFormulario")]
        public EntitySet<Formulario> Formularios
        {
            get
            {
                return this._Formularios;
            }
            set
            {
                this._Formularios.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Usuarios(Usuario entity)
        {
            this.SendPropertyChanging("Usuarios");
            entity.Rol = this;
        }
    
        private void detach_Usuarios(Usuario entity)
        {
            this.SendPropertyChanging("Usuarios");
            entity.Rol = null;
        }

        private void attach_Formularios(Formulario entity)
        {
            this.SendPropertyChanging("Formularios");
            entity.Rols.Add(this);
        }
    
        private void detach_Formularios(Formulario entity)
        {
            this.SendPropertyChanging("Formularios");
            entity.Rols.Remove(this);
        }
    }

    /// <summary>
    /// There are no comments for Prueba12Context.Usuario in the schema.
    /// </summary>
    [Table(Name = @"dbo.Usuario")]
    public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private byte _Id;

        private string _Nombre;

        private int _Identificacion;

        private string _Direccion;

        private System.Nullable<int> _Telefono;

        private System.Nullable<bool> _Eliminado;

        private string _UserName;

        private string _Pass;

        private short _IdRol;
        #pragma warning restore 0649

        private EntityRef<Rol> _Rol;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(byte value);
        partial void OnIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnIdentificacionChanging(int value);
        partial void OnIdentificacionChanged();
        partial void OnDireccionChanging(string value);
        partial void OnDireccionChanged();
        partial void OnTelefonoChanging(System.Nullable<int> value);
        partial void OnTelefonoChanged();
        partial void OnEliminadoChanging(System.Nullable<bool> value);
        partial void OnEliminadoChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();
        partial void OnPassChanging(string value);
        partial void OnPassChanged();
        partial void OnIdRolChanging(short value);
        partial void OnIdRolChanged();
        #endregion

        public Usuario()
        {
            this._Rol  = default(EntityRef<Rol>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "TINYINT NOT NULL IDENTITY", IsDbGenerated = true, IsPrimaryKey = true)]
        public byte Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Identificacion in the schema.
        /// </summary>
        [Column(Storage = "_Identificacion", CanBeNull = false, DbType = "INT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Identificacion
        {
            get
            {
                return this._Identificacion;
            }
            set
            {
                if (this._Identificacion != value)
                {
                    this.OnIdentificacionChanging(value);
                    this.SendPropertyChanging("Identificacion");
                    this._Identificacion = value;
                    this.SendPropertyChanged("Identificacion");
                    this.OnIdentificacionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Direccion in the schema.
        /// </summary>
        [Column(Storage = "_Direccion", DbType = "VARCHAR(50)", UpdateCheck = UpdateCheck.Never)]
        public string Direccion
        {
            get
            {
                return this._Direccion;
            }
            set
            {
                if (this._Direccion != value)
                {
                    this.OnDireccionChanging(value);
                    this.SendPropertyChanging("Direccion");
                    this._Direccion = value;
                    this.SendPropertyChanged("Direccion");
                    this.OnDireccionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Telefono in the schema.
        /// </summary>
        [Column(Name = @"telefono", Storage = "_Telefono", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Telefono
        {
            get
            {
                return this._Telefono;
            }
            set
            {
                if (this._Telefono != value)
                {
                    this.OnTelefonoChanging(value);
                    this.SendPropertyChanging("Telefono");
                    this._Telefono = value;
                    this.SendPropertyChanged("Telefono");
                    this.OnTelefonoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Eliminado in the schema.
        /// </summary>
        [Column(Name = @"eliminado", Storage = "_Eliminado", DbType = "BIT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<bool> Eliminado
        {
            get
            {
                return this._Eliminado;
            }
            set
            {
                if (this._Eliminado != value)
                {
                    this.OnEliminadoChanging(value);
                    this.SendPropertyChanging("Eliminado");
                    this._Eliminado = value;
                    this.SendPropertyChanged("Eliminado");
                    this.OnEliminadoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UserName in the schema.
        /// </summary>
        [Column(Name = @"userName", Storage = "_UserName", CanBeNull = false, DbType = "NVARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                if (this._UserName != value)
                {
                    this.OnUserNameChanging(value);
                    this.SendPropertyChanging("UserName");
                    this._UserName = value;
                    this.SendPropertyChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Pass in the schema.
        /// </summary>
        [Column(Name = @"pass", Storage = "_Pass", CanBeNull = false, DbType = "NVARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Pass
        {
            get
            {
                return this._Pass;
            }
            set
            {
                if (this._Pass != value)
                {
                    this.OnPassChanging(value);
                    this.SendPropertyChanging("Pass");
                    this._Pass = value;
                    this.SendPropertyChanged("Pass");
                    this.OnPassChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdRol in the schema.
        /// </summary>
        [Column(Storage = "_IdRol", CanBeNull = false, DbType = "SMALLINT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public short IdRol
        {
            get
            {
                return this._IdRol;
            }
            set
            {
                if (this._IdRol != value)
                {
                    if (this._Rol.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnIdRolChanging(value);
                    this.SendPropertyChanging("IdRol");
                    this._IdRol = value;
                    this.SendPropertyChanged("IdRol");
                    this.OnIdRolChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Rol in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Rol_Usuario", Storage="_Rol", ThisKey="IdRol", OtherKey="Id", IsForeignKey=true)]
        public Rol Rol
        {
            get
            {
                return this._Rol.Entity;
            }
            set
            {
                Rol previousValue = this._Rol.Entity;
                if ((previousValue != value) || (this._Rol.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Rol");
                    if (previousValue != null)
                    {
                        this._Rol.Entity = null;
                        previousValue.Usuarios.Remove(this);
                    }
                    this._Rol.Entity = value;
                    if (value != null)
                    {
                        this._IdRol = value.Id;
                        value.Usuarios.Add(this);
                    }
                    else
                    {
                        this._IdRol = default(short);
                    }
                    this.SendPropertyChanged("Rol");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}

namespace Prueba12Context
{

    /// <summary>
    /// There are no comments for ConsultarUsuarioResult in the schema.
    /// </summary>
    public partial class ConsultarUsuarioResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private byte _Id;

        private string _Nombre;

        private int _Identificacion;

        private string _Direccion;

        private System.Nullable<int> _Telefono;

        private System.Nullable<bool> _Eliminado;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(byte value);
        partial void OnIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnIdentificacionChanging(int value);
        partial void OnIdentificacionChanged();
        partial void OnDireccionChanging(string value);
        partial void OnDireccionChanged();
        partial void OnTelefonoChanging(System.Nullable<int> value);
        partial void OnTelefonoChanged();
        partial void OnEliminadoChanging(System.Nullable<bool> value);
        partial void OnEliminadoChanged();
        #endregion

        public ConsultarUsuarioResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Storage = "_Id", CanBeNull = false, DbType = "TINYINT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public byte Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Storage = "_Nombre", CanBeNull = false, DbType = "VARCHAR(MAX) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Identificacion in the schema.
        /// </summary>
        [Column(Storage = "_Identificacion", CanBeNull = false, DbType = "INT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Identificacion
        {
            get
            {
                return this._Identificacion;
            }
            set
            {
                if (this._Identificacion != value)
                {
                    this.OnIdentificacionChanging(value);
                    this.SendPropertyChanging("Identificacion");
                    this._Identificacion = value;
                    this.SendPropertyChanged("Identificacion");
                    this.OnIdentificacionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Direccion in the schema.
        /// </summary>
        [Column(Storage = "_Direccion", DbType = "VARCHAR(MAX)", UpdateCheck = UpdateCheck.Never)]
        public string Direccion
        {
            get
            {
                return this._Direccion;
            }
            set
            {
                if (this._Direccion != value)
                {
                    this.OnDireccionChanging(value);
                    this.SendPropertyChanging("Direccion");
                    this._Direccion = value;
                    this.SendPropertyChanged("Direccion");
                    this.OnDireccionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Telefono in the schema.
        /// </summary>
        [Column(Name = @"telefono", Storage = "_Telefono", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Telefono
        {
            get
            {
                return this._Telefono;
            }
            set
            {
                if (this._Telefono != value)
                {
                    this.OnTelefonoChanging(value);
                    this.SendPropertyChanging("Telefono");
                    this._Telefono = value;
                    this.SendPropertyChanged("Telefono");
                    this.OnTelefonoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Eliminado in the schema.
        /// </summary>
        [Column(Name = @"eliminado", Storage = "_Eliminado", DbType = "BIT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<bool> Eliminado
        {
            get
            {
                return this._Eliminado;
            }
            set
            {
                if (this._Eliminado != value)
                {
                    this.OnEliminadoChanging(value);
                    this.SendPropertyChanging("Eliminado");
                    this._Eliminado = value;
                    this.SendPropertyChanged("Eliminado");
                    this.OnEliminadoChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for CrearClienteResult in the schema.
    /// </summary>
    public partial class CrearClienteResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<decimal> _Column0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnColumn0Changing(System.Nullable<decimal> value);
        partial void OnColumn0Changed();
        #endregion

        public CrearClienteResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Column0 in the schema.
        /// </summary>
        [Column(Name = @"column0", Storage = "_Column0", DbType = "DECIMAL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> Column0
        {
            get
            {
                return this._Column0;
            }
            set
            {
                if (this._Column0 != value)
                {
                    this.OnColumn0Changing(value);
                    this.SendPropertyChanging("Column0");
                    this._Column0 = value;
                    this.SendPropertyChanged("Column0");
                    this.OnColumn0Changed();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for ValidarUsernameResult in the schema.
    /// </summary>
    public partial class ValidarUsernameResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<int> _Column0;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnColumn0Changing(System.Nullable<int> value);
        partial void OnColumn0Changed();
        #endregion

        public ValidarUsernameResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Column0 in the schema.
        /// </summary>
        [Column(Name = @"column0", Storage = "_Column0", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Column0
        {
            get
            {
                return this._Column0;
            }
            set
            {
                if (this._Column0 != value)
                {
                    this.OnColumn0Changing(value);
                    this.SendPropertyChanging("Column0");
                    this._Column0 = value;
                    this.SendPropertyChanged("Column0");
                    this.OnColumn0Changed();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
